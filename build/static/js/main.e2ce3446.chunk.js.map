{"version":3,"sources":["images/Bulbasaur.png","images/Ivysaur.png","images/Venusaur.png","images/Charmander.png","images/Charmeleon.png","images/Charizard.png","images/Squirtle.png","images/Wartortle.png","images/Blastoise.png","images/Caterpie.png","images/Metapod.png","images/Butterfree.png","images/Weedlw.png","images/Kakuna.png","images/beedrill.png","images/Pidgey.png","images/Pidgeotto.png","images/Pidgeot.png","images/Rattata.png","images/Raticate.png","components/card.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","CardPokemon","props","styles","backgroundColor","color","className","style","id","name","base","HP","Attack","Defense","Speed","src","image","alt","nameJapones","App","useState","types","english","japanese","chinese","french","type","sprite","BulbasaurImg","IvysaurImg","VenusaurImg","CharmanderImg","CharmeleonImg","CharizardImg","SquirtleImg","WartortleImg","BlastoiseImg","CaterpieImg","MetapodImg","ButterfreeImg","WeddleImg","kakunaImg","BeedrillImg","PidgeyImg","PidgeottoImg","PidgeotImg","RattataImg","RaticateImg","pokemons","typeSelect","setTypeSelect","nameSelect","setNameSelect","Container","fluid","Row","Col","xs","Form","Label","Control","as","custom","onChange","event","target","value","key","map","index","inline","FormControl","placeholder","filter","pokemon","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e2ce3446.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bulbasaur.3af9ed7a.png\";","module.exports = __webpack_public_path__ + \"static/media/Ivysaur.6676c140.png\";","module.exports = __webpack_public_path__ + \"static/media/Venusaur.290b1615.png\";","module.exports = __webpack_public_path__ + \"static/media/Charmander.4690e3ab.png\";","module.exports = __webpack_public_path__ + \"static/media/Charmeleon.c07ad1e0.png\";","module.exports = __webpack_public_path__ + \"static/media/Charizard.2ca3432a.png\";","module.exports = __webpack_public_path__ + \"static/media/Squirtle.b7b81ed6.png\";","module.exports = __webpack_public_path__ + \"static/media/Wartortle.2dae2d15.png\";","module.exports = __webpack_public_path__ + \"static/media/Blastoise.59b07af0.png\";","module.exports = __webpack_public_path__ + \"static/media/Caterpie.acc5959f.png\";","module.exports = __webpack_public_path__ + \"static/media/Metapod.1da54ec1.png\";","module.exports = __webpack_public_path__ + \"static/media/Butterfree.6cbbfee7.png\";","module.exports = __webpack_public_path__ + \"static/media/Weedlw.0cf872c4.png\";","module.exports = __webpack_public_path__ + \"static/media/Kakuna.87302a82.png\";","module.exports = __webpack_public_path__ + \"static/media/beedrill.678f059c.png\";","module.exports = __webpack_public_path__ + \"static/media/Pidgey.ec3b7917.png\";","module.exports = __webpack_public_path__ + \"static/media/Pidgeotto.b0034856.png\";","module.exports = __webpack_public_path__ + \"static/media/Pidgeot.4846a881.png\";","module.exports = __webpack_public_path__ + \"static/media/Rattata.5dfb3298.png\";","module.exports = __webpack_public_path__ + \"static/media/Raticate.72f71ea4.png\";","import React from \"react\";\r\nimport \"./card.component.css\";\r\n\r\nexport default function CardPokemon(props) {\r\n  const styles = {\r\n    backgroundColor: props.color,\r\n  };\r\n  return (\r\n    <div className=\"cardpoke col-md-3 col-xs-6\" style={styles}>\r\n      <div className=\"card-head\">\r\n        <div className=\"card-head-title\">\r\n          <span># {props.id}</span>\r\n          <h5>{props.name}</h5>\r\n          <div className=\"description-poke\">\r\n            <div className=\"text-vertical\">\r\n              <h6>Pokemon</h6>\r\n            </div>\r\n            <div>\r\n              <span>Hp:{props.base.HP}</span>\r\n              <span>Ataque:{props.base.Attack}</span>\r\n              <span>Defensa:{props.base.Defense}</span>\r\n              <span>Velocidad:{props.base.Speed}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body-poke\">\r\n        <img src={props.image} alt=\"pokemon\" />\r\n        <div className=\"footer-text\">\r\n          <span>{props.nameJapones}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport CardPokemon from \"./components/card\";\r\nimport \"./App.css\";\r\nimport { Container, Row, Form, FormControl, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport BulbasaurImg from \"./images/Bulbasaur.png\";\r\nimport IvysaurImg from \"./images/Ivysaur.png\";\r\nimport VenusaurImg from \"./images/Venusaur.png\";\r\nimport CharmanderImg from \"./images/Charmander.png\";\r\nimport CharmeleonImg from \"./images/Charmeleon.png\";\r\nimport CharizardImg from \"./images/Charizard.png\";\r\nimport SquirtleImg from \"./images/Squirtle.png\";\r\nimport WartortleImg from \"./images/Wartortle.png\";\r\nimport BlastoiseImg from \"./images/Blastoise.png\";\r\nimport CaterpieImg from \"./images/Caterpie.png\";\r\nimport MetapodImg from \"./images/Metapod.png\";\r\nimport ButterfreeImg from \"./images/Butterfree.png\";\r\nimport WeddleImg from \"./images/Weedlw.png\";\r\nimport kakunaImg from \"./images/Kakuna.png\";\r\nimport BeedrillImg from \"./images/beedrill.png\";\r\nimport PidgeyImg from \"./images/Pidgey.png\";\r\nimport PidgeottoImg from \"./images/Pidgeotto.png\";\r\nimport PidgeotImg from \"./images/Pidgeot.png\";\r\nimport RattataImg from \"./images/Rattata.png\";\r\nimport RaticateImg from \"./images/Raticate.png\";\r\n\r\nexport default function App() {\r\n  const [types, setTypes] = useState([\r\n    \"Grass\",\r\n    \"Poison\",\r\n    \"Fire\",\r\n    \"Water\",\r\n    \"Flying\",\r\n    \"Bug\",\r\n    \"Normal\",\r\n  ]);\r\n  const [pokemons, setPokemons] = useState([\r\n    {\r\n      id: 1,\r\n      name: {\r\n        english: \"Bulbasaur\",\r\n        japanese: \"フシギダネ\",\r\n        chinese: \"妙蛙种子\",\r\n        french: \"Bulbizarre\",\r\n      },\r\n      type: [\"Grass\", \"Poison\"],\r\n      sprite: BulbasaurImg,\r\n      base: {\r\n        HP: 45,\r\n        Attack: 49,\r\n        Defense: 49,\r\n        \"Sp. Attack\": 65,\r\n        \"Sp. Defense\": 65,\r\n        Speed: 45,\r\n      },\r\n      color: \"rgb(129,208,177)\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: {\r\n        english: \"Ivysaur\",\r\n        japanese: \"フシギソウ\",\r\n        chinese: \"妙蛙草\",\r\n        french: \"Herbizarre\",\r\n      },\r\n      type: [\"Grass\", \"Poison\"],\r\n      sprite: IvysaurImg,\r\n      base: {\r\n        HP: 60,\r\n        Attack: 62,\r\n        Defense: 63,\r\n        \"Sp. Attack\": 80,\r\n        \"Sp. Defense\": 80,\r\n        Speed: 60,\r\n      },\r\n      color: \"rgb(98,179,183)\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: {\r\n        english: \"Venusaur\",\r\n        japanese: \"フシギバナ\",\r\n        chinese: \"妙蛙花\",\r\n        french: \"Florizarre\",\r\n      },\r\n      type: [\"Grass\", \"Poison\"],\r\n      sprite: VenusaurImg,\r\n      base: {\r\n        HP: 80,\r\n        Attack: 82,\r\n        Defense: 83,\r\n        \"Sp. Attack\": 100,\r\n        \"Sp. Defense\": 100,\r\n        Speed: 80,\r\n      },\r\n      color: \"rgb(85,158,170)\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: {\r\n        english: \"Charmander\",\r\n        japanese: \"ヒトカゲ\",\r\n        chinese: \"小火龙\",\r\n        french: \"Salamèche\",\r\n      },\r\n      type: [\"Fire\"],\r\n      sprite: CharmanderImg,\r\n      base: {\r\n        HP: 39,\r\n        Attack: 52,\r\n        Defense: 43,\r\n        \"Sp. Attack\": 60,\r\n        \"Sp. Defense\": 50,\r\n        Speed: 65,\r\n      },\r\n      color: \"rgb(224,109,35)\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: {\r\n        english: \"Charmeleon\",\r\n        japanese: \"リザード\",\r\n        chinese: \"火恐龙\",\r\n        french: \"Reptincel\",\r\n      },\r\n      type: [\"Fire\"],\r\n      sprite: CharmeleonImg,\r\n      base: {\r\n        HP: 58,\r\n        Attack: 64,\r\n        Defense: 58,\r\n        \"Sp. Attack\": 80,\r\n        \"Sp. Defense\": 65,\r\n        Speed: 80,\r\n      },\r\n      color: \"rgb(229,70,70)\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: {\r\n        english: \"Charizard\",\r\n        japanese: \"リザードン\",\r\n        chinese: \"喷火龙\",\r\n        french: \"Dracaufeu\",\r\n      },\r\n      type: [\"Fire\", \"Flying\"],\r\n      sprite: CharizardImg,\r\n      base: {\r\n        HP: 78,\r\n        Attack: 84,\r\n        Defense: 78,\r\n        \"Sp. Attack\": 109,\r\n        \"Sp. Defense\": 85,\r\n        Speed: 100,\r\n      },\r\n      color: \"rgb(221,133,53)\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: {\r\n        english: \"Squirtle\",\r\n        japanese: \"ゼニガメ\",\r\n        chinese: \"杰尼龟\",\r\n        french: \"Carapuce\",\r\n      },\r\n      type: [\"Water\"],\r\n      sprite: SquirtleImg,\r\n      base: {\r\n        HP: 44,\r\n        Attack: 48,\r\n        Defense: 65,\r\n        \"Sp. Attack\": 50,\r\n        \"Sp. Defense\": 64,\r\n        Speed: 43,\r\n      },\r\n      color: \"rgb(148,207,200)\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: {\r\n        english: \"Wartortle\",\r\n        japanese: \"カメール\",\r\n        chinese: \"卡咪龟\",\r\n        french: \"Carabaffe\",\r\n      },\r\n      type: [\"Water\"],\r\n      sprite: WartortleImg,\r\n      base: {\r\n        HP: 59,\r\n        Attack: 63,\r\n        Defense: 80,\r\n        \"Sp. Attack\": 65,\r\n        \"Sp. Defense\": 80,\r\n        Speed: 58,\r\n      },\r\n      color: \"rgb(121,145,205)\",\r\n    },\r\n    {\r\n      id: 9,\r\n      name: {\r\n        english: \"Blastoise\",\r\n        japanese: \"カメックス\",\r\n        chinese: \"水箭龟\",\r\n        french: \"Tortank\",\r\n      },\r\n      type: [\"Water\"],\r\n      sprite: BlastoiseImg,\r\n      base: {\r\n        HP: 79,\r\n        Attack: 83,\r\n        Defense: 100,\r\n        \"Sp. Attack\": 85,\r\n        \"Sp. Defense\": 105,\r\n        Speed: 78,\r\n      },\r\n      color: \"rgb(106,142,178)\",\r\n    },\r\n    {\r\n      id: 10,\r\n      name: {\r\n        english: \"Caterpie\",\r\n        japanese: \"キャタピー\",\r\n        chinese: \"绿毛虫\",\r\n        french: \"Chenipan\",\r\n      },\r\n      type: [\"Bug\"],\r\n      sprite: CaterpieImg,\r\n      base: {\r\n        HP: 45,\r\n        Attack: 30,\r\n        Defense: 35,\r\n        \"Sp. Attack\": 20,\r\n        \"Sp. Defense\": 20,\r\n        Speed: 45,\r\n      },\r\n      color: \"rgb(109,156,89)\",\r\n    },\r\n    {\r\n      id: 11,\r\n      name: {\r\n        english: \"Metapod\",\r\n        japanese: \"トランセル\",\r\n        chinese: \"铁甲蛹\",\r\n        french: \"Chrysacier\",\r\n      },\r\n      type: [\"Bug\"],\r\n      sprite: MetapodImg,\r\n      base: {\r\n        HP: 50,\r\n        Attack: 20,\r\n        Defense: 55,\r\n        \"Sp. Attack\": 25,\r\n        \"Sp. Defense\": 25,\r\n        Speed: 30,\r\n      },\r\n      color: \"rgb(115,161,53)\",\r\n    },\r\n    {\r\n      id: 12,\r\n      name: {\r\n        english: \"Butterfree\",\r\n        japanese: \"バタフリー\",\r\n        chinese: \"巴大蝶\",\r\n        french: \"Papilusion\",\r\n      },\r\n      type: [\"Bug\", \"Flying\"],\r\n      sprite: ButterfreeImg,\r\n      base: {\r\n        HP: 60,\r\n        Attack: 45,\r\n        Defense: 50,\r\n        \"Sp. Attack\": 90,\r\n        \"Sp. Defense\": 80,\r\n        Speed: 70,\r\n      },\r\n      color: \"rgb(145,125,214)\",\r\n    },\r\n    {\r\n      id: 13,\r\n      name: {\r\n        english: \"Weedle\",\r\n        japanese: \"ビードル\",\r\n        chinese: \"独角虫\",\r\n        french: \"Aspicot\",\r\n      },\r\n      type: [\"Bug\", \"Poison\"],\r\n      sprite: WeddleImg,\r\n      base: {\r\n        HP: 40,\r\n        Attack: 35,\r\n        Defense: 30,\r\n        \"Sp. Attack\": 20,\r\n        \"Sp. Defense\": 20,\r\n        Speed: 50,\r\n      },\r\n      color: \"rgb(233,196,93)\",\r\n    },\r\n    {\r\n      id: 14,\r\n      name: {\r\n        english: \"Kakuna\",\r\n        japanese: \"コクーン\",\r\n        chinese: \"铁壳蛹\",\r\n        french: \"Coconfort\",\r\n      },\r\n      type: [\"Bug\", \"Poison\"],\r\n      sprite: kakunaImg,\r\n      base: {\r\n        HP: 45,\r\n        Attack: 25,\r\n        Defense: 50,\r\n        \"Sp. Attack\": 25,\r\n        \"Sp. Defense\": 25,\r\n        Speed: 35,\r\n      },\r\n      color: \"rgb(173,144,42)\",\r\n    },\r\n    {\r\n      id: 15,\r\n      name: {\r\n        english: \"Beedrill\",\r\n        japanese: \"スピアー\",\r\n        chinese: \"大针蜂\",\r\n        french: \"Dardargnan\",\r\n      },\r\n      type: [\"Bug\", \"Poison\"],\r\n      sprite: BeedrillImg,\r\n      base: {\r\n        HP: 65,\r\n        Attack: 90,\r\n        Defense: 40,\r\n        \"Sp. Attack\": 45,\r\n        \"Sp. Defense\": 80,\r\n        Speed: 75,\r\n      },\r\n      color: \"rgb(236,169,17)\",\r\n    },\r\n    {\r\n      id: 16,\r\n      name: {\r\n        english: \"Pidgey\",\r\n        japanese: \"ポッポ\",\r\n        chinese: \"波波\",\r\n        french: \"Roucool\",\r\n      },\r\n      type: [\"Normal\", \"Flying\"],\r\n      sprite: PidgeyImg,\r\n      base: {\r\n        HP: 40,\r\n        Attack: 45,\r\n        Defense: 40,\r\n        \"Sp. Attack\": 35,\r\n        \"Sp. Defense\": 35,\r\n        Speed: 56,\r\n      },\r\n      color: \"rgb(192,138,70)\",\r\n    },\r\n    {\r\n      id: 17,\r\n      name: {\r\n        english: \"Pidgeotto\",\r\n        japanese: \"ピジョン\",\r\n        chinese: \"比比鸟\",\r\n        french: \"Roucoups\",\r\n      },\r\n      type: [\"Normal\", \"Flying\"],\r\n      sprite: PidgeottoImg,\r\n      base: {\r\n        HP: 63,\r\n        Attack: 60,\r\n        Defense: 55,\r\n        \"Sp. Attack\": 50,\r\n        \"Sp. Defense\": 50,\r\n        Speed: 71,\r\n      },\r\n      color: \"rgb(192,138,70)\",\r\n    },\r\n    {\r\n      id: 18,\r\n      name: {\r\n        english: \"Pidgeot\",\r\n        japanese: \"ピジョット\",\r\n        chinese: \"大比鸟\",\r\n        french: \"Roucarnage\",\r\n      },\r\n      type: [\"Normal\", \"Flying\"],\r\n      sprite: PidgeotImg,\r\n      base: {\r\n        HP: 83,\r\n        Attack: 80,\r\n        Defense: 75,\r\n        \"Sp. Attack\": 70,\r\n        \"Sp. Defense\": 70,\r\n        Speed: 101,\r\n      },\r\n      color: \"rgb(192,138,70)\",\r\n    },\r\n    {\r\n      id: 19,\r\n      name: {\r\n        english: \"Rattata\",\r\n        japanese: \"コラッタ\",\r\n        chinese: \"小拉达\",\r\n        french: \"Rattata\",\r\n      },\r\n      type: [\"Normal\"],\r\n      sprite: RattataImg,\r\n      base: {\r\n        HP: 30,\r\n        Attack: 56,\r\n        Defense: 35,\r\n        \"Sp. Attack\": 25,\r\n        \"Sp. Defense\": 35,\r\n        Speed: 72,\r\n      },\r\n      color: \"rgb(147,87,162)\",\r\n    },\r\n    {\r\n      id: 20,\r\n      name: {\r\n        english: \"Raticate\",\r\n        japanese: \"ラッタ\",\r\n        chinese: \"拉达\",\r\n        french: \"Rattatac\",\r\n      },\r\n      type: [\"Normal\"],\r\n      sprite: RaticateImg,\r\n      base: {\r\n        HP: 55,\r\n        Attack: 81,\r\n        Defense: 60,\r\n        \"Sp. Attack\": 50,\r\n        \"Sp. Defense\": 70,\r\n        Speed: 97,\r\n      },\r\n      color: \"rgb(192,138,70)\",\r\n    },\r\n  ]);\r\n\r\n  const [typeSelect, setTypeSelect] = useState(\"Todos\");\r\n  const handleType = (event) => {\r\n    setTypeSelect(event.target.value);\r\n  };\r\n\r\n  const [nameSelect, setNameSelect] = useState(\"\");\r\n  const handleNameSelect = (event) => {\r\n    setNameSelect(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"flex-column my-5\">\r\n        <div className=\"filters d-flex justify-content-center\">\r\n          <Col xs={4}>\r\n            <Form.Label>Selecciona una categoría</Form.Label>\r\n            <Form.Control as=\"select\" custom onChange={handleType}>\r\n              <option key={0} value=\"Todos\">\r\n                Todos\r\n              </option>\r\n              {types.map((type, index) => {\r\n                return (\r\n                  <option key={index + 1} value={type}>\r\n                    {type}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n          </Col>\r\n        </div>\r\n        <div className=\"filters d-flex justify-content-center\">\r\n          <Form inline>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Busca un pokemon\"\r\n              className=\"mr-sm-2\"\r\n              value={nameSelect}\r\n              onChange={handleNameSelect}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </Row>\r\n      <Container fluid>\r\n        <div className=\"cards\">\r\n          {pokemons\r\n            .filter((pokemon) => {\r\n              return typeSelect === \"Todos\"\r\n                ? true\r\n                : pokemon.type.includes(typeSelect);\r\n            })\r\n            .filter((pokemon) => {\r\n              return pokemon.name.english === \"\"\r\n                ? true\r\n                : pokemon.name.english.includes(nameSelect);\r\n            })\r\n            .map((pokemon, index) => {\r\n              return (\r\n                <CardPokemon\r\n                  key={index}\r\n                  id={pokemon.id}\r\n                  name={pokemon.name.english}\r\n                  nameJapones={pokemon.name.japanese}\r\n                  image={pokemon.sprite}\r\n                  base={pokemon.base}\r\n                  types={pokemon.type}\r\n                  color={pokemon.color}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}